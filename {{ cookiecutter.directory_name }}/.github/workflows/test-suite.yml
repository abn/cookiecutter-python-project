name: Test Suite

on:
  pull_request: {}
  push:
    branches: [master]

jobs:
  Tests:
    name: ${{ '{{' }} matrix.os }} / ${{ '{{' }} matrix.python-version }}
    runs-on: ${{ '{{' }} matrix.os }}-latest
    strategy:
      matrix:
        os: [Ubuntu, MacOS, Windows]
        python-version: [{{ cookiecutter.minimum_python_version }}]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ '{{' }} matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ '{{' }} matrix.python-version }}

      - name: Get full python version
        id: full-python-version
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Install poetry
        shell: bash
        run: python -m pip install poetry tox

      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .tox
          key: tox-${{ '{{' }} runner.os }}-${{ '{{' }} steps.full-python-version.outputs.version }}-${{ '{{' }} hashFiles('**/poetry.lock') }}

      - name: Run pytest
        shell: bash
        run: tox -e py
